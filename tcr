#!/bin/bash

file_absolute_dir_path() {
    local file_path="$1"
    local file_dir
    local absolute_file_dir_path

    if [ -L "$file_path" ]; then
        file_path="$(readlink "$0")"
    fi

    file_dir="$(dirname "$file_path")"
    absolute_file_dir_path="$(cd "$file_dir" && pwd)"

    echo "$absolute_file_dir_path"
}

TCR_HOME="$(file_absolute_dir_path "${BASH_SOURCE[0]}")"
TCR_HOME="${TCR_HOME:-"$(file_absolute_dir_path "$0")"}"

TCR_WORK_DIRECTORY="${TCR_WORK_DIRECTORY:-"$(pwd)"}"

source "$TCR_HOME/lib/foundation.sh"
source "$TCR_HOME/lib/tcr/tcr_foundation.sh"
source "$TCR_HOME/lib/tcr/actions.sh"
source "$TCR_HOME/lib/tcr/options.sh"

tcr() {
    local all_arguments="$*"

    if is_unset "$all_arguments"; then
        error_raise "$TCR_ERROR_TCR_ARGUMENTS_MISSING"
        return "$(latest_error_code)"
    fi

    if is_containing "$all_arguments" "$TCR_OPTION_HELP"; then
        tcr_option_help
        return "$(last_command_status)"
    elif is_containing "$all_arguments" "$TCR_OPTION_VERSION"; then
        tcr_option_version
        return "$(last_command_status)"
    fi

    local action="$1"
    local action_arguments=("${@:2}")

    if ! tcr_is_supported_action "$action"; then
        error_raise "$TCR_ERROR_TCR_UNKNOWN_ACTION"
        return "$(latest_error_code)"
    fi
    
    tcr_run_action "$action" "${action_arguments[@]}"
}

tcr_is_supported_action() {
    available_actions=("$TCR_ACTION_INIT" "$TCR_ACTION_ENABLE" "$TCR_ACTION_STOP" "$TCR_ACTION_STATUS" "$TCR_ACTION_RUN" "$TCR_ACTION_WATCH")
    local action="$1"

    is_containing "${available_actions[*]}" "$action"
}

tcr_run_action() {
    action="$1"
    action_arguments=("${@:2}")

    "tcr_action_$action" "${action_arguments[@]}"
}

# -- Main -- #

if [ "${BASH_SOURCE[0]}" = "$0" ]; then
    tcr "$@"
fi